{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kengya Moncada\\\\Documents\\\\Develop\\\\LIM015-burger-queen\\\\my-app\\\\src\\\\components\\\\orders\\\\Orders.js\";\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../../utils/firebaseConfig';\nimport { doc, updateDoc, getDoc } from \"firebase/firestore\";\nimport Header from '../Header';\nimport { Menu } from '../menu/Menu';\nimport { PurchaseOrder } from '../purchaseOrder/PurchaseOrder';\nimport LinkButton from '../ButtonLink';\nimport './orders.css'; // ----------------- ESTRUCTURA PARA VISTA MESAS ---------------- //\n\nexport function Tables() {\n  const [data, setData] = useState([]); // console.log(tableselect)\n  // const [status, setData] = useState([]);\n\n  useEffect(() => {\n    db.collection(\"Table\").orderBy(\"name\", \"asc\").get().then(querySnapshot => {\n      const Table = [];\n      querySnapshot.forEach(doc => {\n        let id = doc.id;\n        let name = doc.data().name;\n        let status = doc.data().status;\n        let obj = {\n          id,\n          name,\n          status\n        };\n        Table.push(obj); // console.log(obj);\n      });\n      setData([...Table]);\n    });\n  }, []);\n\n  const ClickOrders = async id => {\n    console.log(id); // setTableSelect(id);\n    // console.log(tableselect)\n\n    const statusRef = doc(db, \"Table\", id);\n    await updateDoc(statusRef, {\n      status: false\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tables-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, data.map(Table => /*#__PURE__*/React.createElement(React.Fragment, null, console.log(Table.id, 41), /*#__PURE__*/React.createElement(LinkButton, {\n    to: `/order/${Table.id}`,\n    type: \"button\",\n    key: Table.id,\n    className: \"table-button\",\n    onClick: () => ClickOrders(Table.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, Table.name))))));\n} // ----------------- ESTRUCTURA PARA VISTA DE ORDERS ---------------- //\n\nexport function Orders() {\n  // ------------------ FUNCIÓN PARA AGREGAR PRODUCTO ---------------- //\n  // Data de productos seleccionados\n  const [productsSelected, setProductsSelected] = useState([]); // Estados de menu según su tipo\n\n  const [type, setType] = useState('desayuno');\n\n  const addProduct = async id => {\n    console.log('addProducts'); // Acceder a la data del producto seleccionado\n\n    const productsRef = doc(db, 'Products', id); // Traer la data\n\n    const docSnap = await getDoc(productsRef);\n    const docData = docSnap.data();\n    const dataObj = {\n      id: id,\n      name: docData.name,\n      price: docData.price,\n      count: 1\n    };\n    const existInArray = productsSelected.some(product => product.id === dataObj.id);\n\n    if (existInArray) {\n      const products = productsSelected.map(product => {\n        if (product.id === dataObj.id) {\n          product.count = product.count + 1;\n          return product;\n        } else {\n          return product;\n        }\n      });\n      setProductsSelected([...products]);\n      console.log();\n    } else {\n      setProductsSelected([...productsSelected, dataObj]);\n    }\n  }; // ------------------ FUNCIÓN PARA REDUCIR PRODUCTO ---------------- //\n\n\n  const reduceProducts = async id => {\n    // Acceder a la data del producto seleccionado\n    const productsRef = doc(db, 'Products', id); // Traer la data\n\n    const docSnap = await getDoc(productsRef);\n    const docData = docSnap.data();\n    const dataObj = {\n      id: id,\n      name: docData.name,\n      price: docData.price,\n      count: 1\n    };\n    const existInArray = productsSelected.some(product => product.id === dataObj.id);\n\n    if (existInArray) {\n      const products = productsSelected.map(product => {\n        if (product.id === dataObj.id && product.count > 0) {\n          product.count = product.count - 1;\n          return product;\n        } else {\n          return product;\n        }\n      });\n      setProductsSelected([...products]);\n    } else {\n      setProductsSelected([...productsSelected, dataObj]);\n    }\n  }; //------------------------------CREANDO COLECCION-----------------------------------//\n  // ------------------ ESTRUCTURA PARA VISTA DE MENU Y DETALLE DE COMPRA ---------------- //\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"products-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"menu-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-breakfast\",\n    id: \"desayuno\",\n    onClick: () => setType('desayuno'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"DESAYUNO\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-lunch\",\n    id: \"almuerzo\",\n    onClick: () => setType('almuerzo'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"ALMUERZO\"))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"menu-section-products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    addProduct: addProduct,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"purchase-orders-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PurchaseOrder, {\n    productsSelected: productsSelected,\n    setProductsSelected: setProductsSelected,\n    addProduct: addProduct,\n    reduceProducts: reduceProducts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }))));\n}\n;","map":{"version":3,"sources":["C:/Users/Kengya Moncada/Documents/Develop/LIM015-burger-queen/my-app/src/components/orders/Orders.js"],"names":["React","useState","useEffect","db","doc","updateDoc","getDoc","Header","Menu","PurchaseOrder","LinkButton","Tables","data","setData","collection","orderBy","get","then","querySnapshot","Table","forEach","id","name","status","obj","push","ClickOrders","console","log","statusRef","map","Orders","productsSelected","setProductsSelected","type","setType","addProduct","productsRef","docSnap","docData","dataObj","price","count","existInArray","some","product","products","reduceProducts"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { db } from '../../utils/firebaseConfig';\r\nimport { doc, updateDoc, getDoc } from \"firebase/firestore\";\r\nimport Header from '../Header';\r\nimport {Menu} from '../menu/Menu';\r\nimport { PurchaseOrder } from '../purchaseOrder/PurchaseOrder';\r\nimport LinkButton from '../ButtonLink';\r\nimport './orders.css';\r\n// ----------------- ESTRUCTURA PARA VISTA MESAS ---------------- //\r\n\r\nexport function Tables() {\r\n  const [data, setData] = useState([]);\r\n  \r\n  // console.log(tableselect)\r\n  // const [status, setData] = useState([]);\r\n  useEffect(() => {\r\n    db.collection(\"Table\")\r\n      .orderBy(\"name\", \"asc\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const Table = [];\r\n        querySnapshot.forEach((doc) => {\r\n          let id = doc.id;\r\n          let name = doc.data().name;\r\n          let status = doc.data().status;\r\n          let obj = { id, name, status };\r\n          Table.push(obj);\r\n          \r\n          // console.log(obj);\r\n        });\r\n        setData([...Table]);\r\n      });\r\n  }, []);\r\n\r\n  \r\n\r\n  const ClickOrders = async (id) => {\r\n    console.log(id);\r\n    // setTableSelect(id);\r\n    // console.log(tableselect)\r\n    const statusRef = doc(db, \"Table\", id);\r\n    await updateDoc(statusRef, {\r\n      status: false,\r\n    });\r\n    \r\n  };\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      {/* Grilla de mesas */}\r\n      <section>\r\n        <div className=\"tables-container\">\r\n          {data.map((Table) => (\r\n            <>\r\n              {console.log(Table.id, 41)}\r\n              <LinkButton\r\n                to={`/order/${Table.id}`}\r\n                type=\"button\"\r\n                key={Table.id}\r\n                className=\"table-button\"\r\n                onClick={() => ClickOrders(Table.id)}\r\n              >\r\n                {Table.name}\r\n              </LinkButton>\r\n            </>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------- ESTRUCTURA PARA VISTA DE ORDERS ---------------- //\r\n\r\nexport function Orders() {\r\n    \r\n    // ------------------ FUNCIÓN PARA AGREGAR PRODUCTO ---------------- //\r\n\r\n     // Data de productos seleccionados\r\n     const [productsSelected, setProductsSelected] = useState([]);\r\n\r\n     // Estados de menu según su tipo\r\n     const [type, setType] = useState('desayuno');\r\n\r\n       \r\n     const addProduct = async (id) => {\r\n\r\n      console.log('addProducts')\r\n         // Acceder a la data del producto seleccionado\r\n         const productsRef = doc(db, 'Products', id);\r\n         // Traer la data\r\n         const docSnap = await getDoc( productsRef);\r\n     \r\n         const docData = docSnap.data();\r\n     \r\n         const dataObj = {\r\n           id: id,\r\n           name: docData.name,\r\n           price: docData.price,\r\n           count: 1\r\n         };\r\n \r\n         const existInArray = productsSelected.some((product) => product.id === dataObj.id)\r\n         if(existInArray) {\r\n             const products = productsSelected.map((product) => {\r\n                 if(product.id === dataObj.id) {\r\n                     product.count = product.count + 1\r\n                     return product\r\n                 } else {\r\n                     return product\r\n                 }\r\n             }) \r\n             setProductsSelected([...products]);\r\n             console.log()\r\n         } else {\r\n             setProductsSelected([...productsSelected, dataObj]);\r\n         }\r\n     }\r\n\r\n\r\n    // ------------------ FUNCIÓN PARA REDUCIR PRODUCTO ---------------- //\r\n    const reduceProducts = async(id) => {\r\n        // Acceder a la data del producto seleccionado\r\n        const productsRef = doc(db, 'Products', id);\r\n        // Traer la data\r\n        const docSnap = await getDoc( productsRef);\r\n    \r\n        const docData = docSnap.data();\r\n    \r\n        const dataObj = {\r\n          id: id,\r\n          name: docData.name,\r\n          price: docData.price,\r\n          count: 1\r\n        };\r\n\r\n        const existInArray = productsSelected.some((product) => product.id === dataObj.id)\r\n        if(existInArray) {\r\n            const products = productsSelected.map((product) => {\r\n                if(product.id === dataObj.id && product.count > 0) {\r\n                    product.count = product.count - 1\r\n                    return product\r\n                } else {\r\n                  return product\r\n                }\r\n            }) \r\n            setProductsSelected([...products]);\r\n        } else {\r\n            setProductsSelected([...productsSelected, dataObj]);\r\n        }\r\n     }\r\n    \r\n//------------------------------CREANDO COLECCION-----------------------------------//\r\n    // ------------------ ESTRUCTURA PARA VISTA DE MENU Y DETALLE DE COMPRA ---------------- //\r\n\r\n    return (\r\n      <>\r\n    {/* SECCION HEADER */}\r\n    <Header />\r\n\r\n    <main className=\"products-section\" >\r\n      {/* SECCIÓN DE BOTONES */}\r\n      <section className=\"menu-section\">\r\n\r\n        <div className=\"menu-buttons-container\">\r\n          <button type=\"button\" className=\"btn-breakfast\" id=\"desayuno\"\r\n          onClick={()=> setType('desayuno')}\r\n          >\r\n            DESAYUNO\r\n          </button>\r\n          <button type=\"button\" className=\"btn-lunch\" id=\"almuerzo\"\r\n          onClick={()=> setType('almuerzo')}\r\n          >\r\n            ALMUERZO\r\n          </button>\r\n        </div>\r\n\r\n      </section>\r\n\r\n      {/* SECCION DE PRODUCTOS */}\r\n      <section className=\"menu-section-products\">\r\n          <Menu addProduct={addProduct} type={type}/>\r\n      </section>\r\n\r\n      {/* TABLA DE DETALLES DE LA ORDEN */}\r\n      <section className=\"purchase-orders-section\">\r\n          <PurchaseOrder\r\n          productsSelected={productsSelected}\r\n          setProductsSelected={setProductsSelected}\r\n          addProduct={addProduct} \r\n          reduceProducts={reduceProducts}\r\n            />\r\n      </section>\r\n    </main>\r\n  </>\r\n);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}